[{"url":"https://github.com/ajboni/docurry","title":"Source","plainTextContent":""},{"url":"/en/docs/about/introduction.html","title":"Introduction","plainTextContent":"INTRODUCTION \nThanks for checking out this little project. This site is entirely built with\nDocurry and it is a demo of the out-of-the-box behavior.\n\nPlease notice that the project is very alpha and may contain bugs and\nundocumented features.\n\nHere‚Äôs an puppy attempt, for the trouble:\n\ndogo [/img/puppy.jpg]"},{"url":"/en/docs/about/what.html","title":"What","plainTextContent":"WHAT? \nDocurry is an extremely simple, very opinionated, zero-config documentation\nwebsite generator. The idea is that you focus on writing the content and let the\npresentation be generated automatically.\n\nIts main features are:\n\n * Parses markdown files and generate HTML files automatically.\n * Exports into a static site compatible with Github pages, Netlify, etc.\n * Simple html output, no router, no spa, no hash based navigation.\n * SEO and Mobile friendly.\n * Supports multiple languages.\n * Blazing fast.\n * Syntax Highlighting.\n * Auto-generate Sidebar, favicons, and Landing pages."},{"url":"/en/docs/about/why.html","title":"Why","plainTextContent":"WHY? \nThere are plenty of static sites generators, why make Docurry?\n\nThe project was born when I needed a quick, zero config doc site for one of my\nprojects. I Found popular static site generators a little bit too much and\nquickly found the awesome project.\n\nUnfortunately at that time there was no static export options and navigation was\nmade via a router. This makes SEO a little bit more complicated and md files are\nparsed at runtime.\n\nThis project aims to be as simple as 1-2-3 and the output should be a standard\nstatic html site."},{"url":"/en/docs/about/how.html","title":"How","plainTextContent":"HOW ? \nThe aim of the project is that it should be painless to create a site in\nminutes.\n\n 1. Clone repo.\n 2. Configure basic options. (Project name, description and logo is enough)\n 3. Add markdown files.\n 4. Build.\n 5. Deploy build folder to your favorite host‚Ä¶"},{"url":"/en/docs/getting_started/installation.html","title":"Installation","plainTextContent":"INSTALLATION \nThe installation process is really simple:\n\n 1. Use the template https://github.com/ajboni/docurry/generate or just download\n    the repo\n 2. Install dependencies: npm install\n 3. Have a look at config.js and set up your project.\n 4. Replace content folder considering the and"},{"url":"/en/docs/getting_started/folder_structure.html","title":"Folder Structure","plainTextContent":"TO:DO"},{"url":"/en/docs/getting_started/run.html","title":"Run","plainTextContent":"RUNNING DEVELOPMENT ENVIRONMENT. \nTo run the development environment: npm run dev.\n\nThe server will track changes on both the frontend and markdown files and should\nlive reload the browser on any changes.\n\n> Live reload is WIP and might not work as expected, specially when changing\nsource files. If no changes are shown, try re-running npm run dev.\nSorry for the trouble üôè"},{"url":"/en/docs/getting_started/build.html","title":"Build","plainTextContent":"BUILD \nTo build your site, just run npm run build.\n\nThe entire site will be available at BUILD_FOLDER"},{"url":"/en/docs/getting_started/deploy/github_pages.html","title":"Deploy Docurry site to Github pages using Github actions.","plainTextContent":"DEPLOY DOCURRY SITE TO GITHUB PAGES USING GITHUB ACTIONS \nThere is a ready to use github action at \n.github/workflows/build-and-deploy-site.yml which will automatically deploy your\nsite onto gh-pages branch on each commit to master.\n\nIf you are not planning of using this feature it can be safely removed.\n\nSome considerations:\n\n * If you modified BUILD_FOLDER setting rename the src folder in there.\n * If you are using custom domain use the cname property. Else remove it.\n\nYAML# This workflow builds and deploys Docurry build folder into gh-pages branch.\nname: Docurry Deploy\n\non:\n  push:\n    branches: [master]\n  pull_request:\n    branches: [master]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Use Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: \"12.x\"\n      - run: npm install\n      - run: npm run build --if-present\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: $\n          publish_dir: ./build # Change to match config.BUILD_FOLDER\n          force_orphan: true\n          cname: docurry.aboni.dev  # Remove if not using custom domains."},{"url":"/en/docs/writing_docs/file_names.html","title":"File Names","plainTextContent":"FILENAME CONVENTIONS \nTo facilitate sorting there are special rules that applies to file/folder naming\n\n * Anything before __ will be ignored: 01__Title.md will become: title.html and \n   Title on the sidebar (If title meta tag is not set). This is useful to sort\n   directly on the file system.\n * Underscores _ and slashes will be converted to spaces in sidebar: \n   xxx__my_awesome_title will become: My Awesome Title on the sidebar. (If title\n   meta tag is not set)."},{"url":"/en/docs/writing_docs/front_matter.html","title":"Front Matter","plainTextContent":"FRONT MATTER \nAny file that contains a YAML front matter block will be processed by Docurry as\na special file. The front matter must be the first thing in the file and must\ntake the form of valid YAML set between triple-dashed lines. Here is a basic\nexample:\n\nYAML---\ntitle: My Awesome Site\ndescription: Some not generic description.\nimg: An optional img for SEO\ncaption: Sidebar friendly name\nurl: http://override_url\nexternal: true\n---\n\n\nBetween these triple-dashed lines, you can set predefined variables (see below\nfor a reference) or even create custom ones of your own. These variables will\nthen be available for you to access using both further down in the file and also\nin any layouts or includes that the page or post in question relies on.\n\n * title and description tags will be added to the HTML as meta tags, they are\n   useful for SEO purposes.\n * caption Will be used for the sidebar. If no caption tag is set, docurry will\n   auto generate one with the file name.\n * img If set, will be used on Facebook adn Twitter meta tags if PROJECT_URL \n   setting is set. Very useful for SEO.\n * url If set, the url on the sidebar and search, will link to it.\n * external If true will open link in a new tab and it will add rel=\"noopener\n   noreferrer\" to the <a> tag"},{"url":"/en/docs/writing_docs/links.html","title":"Links","plainTextContent":"LINKS \nTo create links relative to the language being used add a // at the start of the\nlink. This will transform your link into a pseudo-absolute link\n\nAssuming the site url is localhost and we are editing a src file located at\n`content/en/docs/about/test.md\n\n> This only applies to <a> tags\n\n\nMarkdown[Relative](new-link) => will be converted to localhost/en/docs/about/test/new-link\n[Absolute](/new-link) => will be converted to localhost/new-link\n[Pseudo Absolute](//new-link) => will be converted to localhost/en/new-link\n[Explicit Absolute](http://localhost/en/new-link) => will be kept intact.\n\n\nEXAMPLES \n * \n * \n * \n *"},{"url":"/en/docs/writing_docs/variables.html","title":"Variables","plainTextContent":"VARIABLES TO USE IN MARKDOWN \nYou can use to access some of the data: the syntax is the variable enclosed in\ndouble curly braces { { var } }.\n\n 1. All metadata from the frontmatter is available.\n 2. All settings of config.js are available\n 3. ROOT will point to the current language root url.\n\nCUSTOM FILES \nYou can edit EXTRA_FILES_AS_VARIABLES in config to add markdown files that can\nbe used as variables with the following syntax: file_extension.\n\nFor example: README_md Will output the contents of readme.md if exists. Useful\nfor landing pages or doc index."},{"url":"/en/docs/site_generation/settings.html","title":"Settings","plainTextContent":"SETTINGS \nYou can edit the project settings in config.js.\n\nJavascriptexports.config = {\n  /* Project Name and logo on the navbar. */\n  PROJECT_NAME: \"Docurry\",\n  PROJECT_DESCRIPTION: \"A spicy, zero-config documentation site generator.\",\n\n  /* Only used for Facebook and Twitter meta tags. Set it to null to ignore */\n  PROJECT_URL: \"https://docurry.aboni.dev\",\n\n  /* Folder where src docs are located. */\n  CONTENT_FOLDER: \"./content\",\n\n  /* Images, relative to CONTENT_FOLDER  */\n  PROJECT_LOGO: \"img/logo.png\",\n\n  /*   Folder where built files will be located. */\n  BUILD_FOLDER: \"./build\",\n\n  /*  ID for the default language. It will be accesible without any prefix in the slug. */\n  DEFAULT_LANGUAGE_ID: \"en\",\n\n  /* Available languages \n  First language will be the default language. Landing page will be accesible without any prefix in the slug.\n  If there is only one langugage, the entire site will be accesed without language path in the url.\n  id is: ISO 3166-1-alpha-2 code\n  */\n\n  LANGUAGES: [\n    {\n      id: \"en\",\n      caption: \"English\",\n      iso: \"gb\",\n      translations: {\n        no_search_result: \"No results found, try a different query.\",\n        table_of_contents: \"Table of contents\",\n      },\n    },\n    {\n      id: \"es\",\n      caption: \"Espa√±ol\",\n      iso: \"es\",\n      translations: {\n        no_search_result:\n          \"No se han encontrado resultados. Pruebe otra b√∫squeda\",\n        table_of_contents: \"Tabla de contenidos\",\n      },\n    },\n  ],\n\n  /* Include a language selector on landing page and docs */\n  ADD_LANGUAGE_SELECTOR: true,\n\n  /* Should we show the default language doc if the localized version cannot be found ? */\n  FALLBACK_TO_DEFAULT_LANGUAGE: true,\n\n  /* Enable site-wide searching */\n  ENABLE_SEARCH: true,\n\n  /* Autogenerate sidebar content for documents */\n  AUTO_GENERATE_SIDEBAR: true,\n\n  /* Add Table Of contents widget on doc page.*/\n  ADD_TOC: true,\n\n  /* Add Footer widget on doc page.*/\n  ADD_FOOTER: true,\n\n  /* Add 'NEXT' and 'PREVIOUS' buttons on each document.  */\n  ADD_NEXT_PREVIOUS_BUTTONS: true,\n\n  /* If 'auto', autogenerate background options using trianglify (checkout the license) otherwise specify path for image */\n  LANDING_PAGE_BG: \"auto\",\n\n  /* File contents of this list will be available for use as a variable in a template or markdown as  */\n  EXTRA_FILES_AS_VARIABLES: [\"README.md\", \"config.js\"],\n\n  /* Whether to strip .html extension in generated links (sidebar) (eg: /en/docs/tutorial.html => /en/docs/tutorial ) */\n  REMOVE_EXTENSION_FROM_LINKS: false,\n\n  /* After build, remove any class that is not being used. Be careful with classes that inject at runtime.  \n  You can add \\/\\* purgecss ignore \\/\\* directly on the class definition on your css or whitelist it below\n  */\n  PURGE_CSS: {\n    purge: true,\n    whitelist: null,\n    whitelistPatterns: null,\n    whitelistPatternsChildren: null,\n  },\n};"},{"url":"/en/docs/site_generation/landing_page.html","title":"Landing Page","plainTextContent":"LANDING PAGE \nDocurry will auto generate a landing page according to the info on To override\nthe behavior simply create a in your content/{language} folder: eg: \ncontent/en/index.mdSome special rules applies to this template:\n\n * <h5> ##### tags shows up big and centered, useful for showing emojis.\n * Ordered lists <ol> shows up vertically stacked without list style.\n * Unordered lists <ul> creates buttons for every entry and they are showed\n   stacked horizontally. Intended to be used to create buttons with links.\n * <blockqoute> > shows as a subtitle.\n\nExample:\n\nMarkdown##### üçõ\n\n# Docurry\n\n> A spicy, zero-config documentation site generator.\n\n1. Simple and fast.\n2. Statically built HTML. No router.\n3. Multiple languages.\n4. SEO and Mobile First\n5. Open Source.\n\n- [Docs](docs/)\n- [Github](https://github.com/ajboni/docurry)\n\n\n\nBACKGROUND GENERATION \nIf you want to provide your own background set the path on \nconfig.LANDING_PAGE_BG. It will be converted to jpg and copied to \nBUILD_FOLDER/img/bg.jpg\n\nIf you set config.LANDING_PAGE_BG to auto Docurry will auto generate the\nbackground using \n\n> Make sure to read and make sure your project complies with it.\n\n\nEach time the site is built, a new background will be generated."},{"url":"/en/docs/site_generation/favicons.html","title":"Favicons","plainTextContent":"FAVICONS \nAuto generate favicons for all platforms.\n\nSOURCE FILE. \nSource file for the favicon must be an image file and specified in\n\nCACHE \nFavicon generation might time some time, so Docurry will only generate them if\nthere is no .cache/favicons folder. To force regeneration of favicons simply\ndelete that folder and re-run the build process."},{"url":"/en/docs/site_generation/styles.html","title":"Styles","plainTextContent":"STYLES \nTo customize branding colors set variables in src/client/scss/_variables.scss\n\nTo customize how the website look, you can modify \nsrc/client/scss/landing_page.scss. and src/client/scss/docs.scssDocurry uses .\nFollow the link for more info about customizing it.\n\nFull list of variables can be found \n\nADDING STYLES \nAny .scss file you add in src/client/scss will be processed and copied into \nBUILD_FOLDER/css\n\nIGNORING STYLES \nAny style that starts with underscore _ will be ignored.\n\nPURGING UNUSED CLASSES \nIf config.PURGE_CSS.purge is set to true, Docurry will remove any unused class\nfrom the processed css files, using . There might be cases where a class is used\ndynamically and PurgeCSS will remove it, to handle these cases be sure to . It\ncan be done in the source of crawler/make_styles or in PURGE_CSS config object."},{"url":"/en/docs/site_generation/templates/templates_overview.html","title":"Templates Overview","plainTextContent":"TEMPLATES \nSeveral html templates can be found in src/client folder\n\ndocs.html This is the document article templatelanding_page.html The landing\npage of the sitesidebar.html The sidebar template.sidebar.html Each sidebar item\ntemplate.navbar.html Navbar template"},{"url":"/en/docs/site_generation/templates/sidebar.html","title":"Sidebar","plainTextContent":"SIDEBAR \nIn order to generate the sidebar Docurry will do the following:\n\n 1. It will look for a sidebar.json file inside each language content folder:\n\nExample\n\njson[\n  {\n    \"name\": \"github\",\n    \"caption\": \"Github\",\n    \"path\": \"https://github.com\",\n    \"isFolder\": false,\n    \"parent\": \"docs\",\n    \"children\": []\n  }\n]\n\n\nNested menus can be manually built.\n\n> To avoid dealing with manual sidebars, you can create a .md document and set its \nto your desired link. (It will work with nested hierarchies also)\n\n\n 2. If AUTO_GENERATE_SIDEBAR setting is true will append to that file each\n    document path and will create the appropriate hierarchy of files/folders.\n\nsidebar-example [/img/sidebar-example.jpg]"},{"url":"/en/docs/site_generation/templates/navbar.html","title":"Navbar","plainTextContent":"NAVBAR \nNavbar can have a search box and buttons.\n\nTo enable search box just set ENABLE_SEARCH setting. Similar to you can provide\na navbar.json with the following content:\n\njson[\n  {\n    \"caption\": \"Github\",\n    \"url\": \"https://github.com\",\n    \"class\": \"btn-primary\"\n  }\n]\n\n\nThe result will be something like this:\n\nNavbar [/img/navbar-example.jpg]"},{"url":"/en/docs/site_generation/site-wide_search.html","title":"Site Wide Search","plainTextContent":"SEARCH \nDocurry comes with out of the box site-wide search capabilities. To disable just\nset ENABLE_SEARCH to false in \n\nTWEAKING SEARCH BEHAVIOR."},{"url":"/en/docs/site_generation/nested/objects.html","title":"Objects","plainTextContent":"Nothing to see here!"},{"url":"/en/docs/site_generation/nested/are/supported.html","title":"Supported","plainTextContent":"YAY üï∂Ô∏è \n\n--------------------------------------------------------------------------------\n\nAdvertisement üòÉ [https://twemoji.maxcdn.com/v/13.0.1/72x72/1f603.png]\n\n *  - high quality and fast image resize in browser.\n *  - developer friendly i18n with plurals support and easy syntax.\n\nYou will like those projects!\n\n\n--------------------------------------------------------------------------------\n\nH1 HEADING üòé [HTTPS://TWEMOJI.MAXCDN.COM/V/13.0.1/72X72/1F60E.PNG] \nH2 HEADING \nH3 HEADING \nH4 HEADING \nH5 HEADING \nH6 HEADING \nHORIZONTAL RULES \n\n--------------------------------------------------------------------------------\n\n\n--------------------------------------------------------------------------------\n\n\n--------------------------------------------------------------------------------\n\nTYPOGRAPHIC REPLACEMENTS \nEnable typographer option to see result.\n\n¬© ¬© ¬Æ ¬Æ ‚Ñ¢ ‚Ñ¢ ¬ß ¬ß ¬±\n\ntest‚Ä¶ test‚Ä¶ test‚Ä¶ test?.. test!..\n\n!!! ??? , ‚Äì ‚Äî\n\n‚ÄúSmartypants, double quotes‚Äù and ‚Äòsingle quotes‚Äô\n\nEMPHASIS \nThis is bold text\n\nThis is bold text\n\nThis is italic text\n\nThis is italic text\n\nStrikethrough\n\nBLOCKQUOTES \n> Blockquotes can also be nested‚Ä¶\n\n> ‚Ä¶by using additional greater-than signs right next to each other‚Ä¶\n\n> ‚Ä¶or with spaces between arrows.\n\n\n\n\nLISTS \nUnordered\n\n * Create a list by starting a line with +, -, or *\n * Sub-lists are made by indenting 2 spaces: * Marker character change forces\n      new list start: * Ac tristique libero volutpat at\n      \n       * Facilisis in pretium nisl aliquet\n      \n       * Nulla volutpat aliquam velit\n      \n      \n   \n   \n * Very easy!\n\nOrdered\n\n 1. Lorem ipsum dolor sit amet\n    \n    \n 2. Consectetur adipiscing elit\n    \n    \n 3. Integer molestie lorem at massa\n    \n    \n 4. You can use sequential numbers‚Ä¶\n    \n    \n 5. ‚Ä¶or keep all the numbers as 1.\n    \n    \n\nStart numbering with offset:\n\n 57. foo\n 58. bar\n\nCODE \nInline code\n\nIndented code\n\n// Some comments\nline 1 of code\nline 2 of code\nline 3 of code\n\n\nBlock code ‚Äúfences‚Äù\n\nSample text here...\n\n\nSyntax highlighting\n\njsvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n\n\nTABLES \nOptionDescriptiondatapath to data files to supply the data that will be passed\ninto templates.engineengine to be used for processing templates. Handlebars is\nthe default.extextension to be used for dest files.Right aligned columns\n\nOptionDescriptiondatapath to data files to supply the data that will be passed\ninto templates.engineengine to be used for processing templates. Handlebars is\nthe default.extextension to be used for dest files.LINKS \n\n\n\n\nAutoconverted link (enable linkify to see)\n\nIMAGES \nMinion [https://octodex.github.com/images/minion.png]Stormtroopocat [https://octodex.github.com/images/stormtroopocat.jpg]\n\nLike links, Images also have a footnote style syntax\n\nAlt text [https://octodex.github.com/images/dojocat.jpg]\n\nWith a reference later in the document defining the URL location:\n\nPLUGINS \nThe killer feature of markdown-it is very effective support of.\n\n \n> Classic markup: üòâ [https://twemoji.maxcdn.com/v/13.0.1/72x72/1f609.png] :crush: üò¢ [https://twemoji.maxcdn.com/v/13.0.1/72x72/1f622.png] \n:tear: üòÜ [https://twemoji.maxcdn.com/v/13.0.1/72x72/1f606.png] üòã [https://twemoji.maxcdn.com/v/13.0.1/72x72/1f60b.png]\n\nShortcuts (emoticons): üòÉ [https://twemoji.maxcdn.com/v/13.0.1/72x72/1f603.png] üò¶ [https://twemoji.maxcdn.com/v/13.0.1/72x72/1f626.png] \n üòé [https://twemoji.maxcdn.com/v/13.0.1/72x72/1f60e.png] üòâ [https://twemoji.maxcdn.com/v/13.0.1/72x72/1f609.png]\n\n\nsee with twemoji."},{"url":"/en/docs/index.html","title":"Docurry","plainTextContent":"DOCURRY \nA spicy, zero-config documentation site generator.\n\nFEATURES \n> Warning: This project is alpha and may contain undocumented and untested\nfeatures\n\n\n *  Write content in pure markdown.\n *  Plain HTML output. Static. No routers. No frameworks.\n *  Multi-language support\n *  SEO Friendly\n *  Mobile Friendly\n *  Auto generate search\n *  Auto generate landing page and favicons.\n *  Auto generate sidebar.\n *  Auto generate Table of contents.\n *  Live Reload (Work in progress)\n *  Zero Config.\n *  üöÄ Blazing fast! üöÄ\n\nDocurry is VERY inspired and EXTREMELY based on the \n\nDemo:"}]